FROM node:20.18.1-bullseye-slim as builder

WORKDIR /build

# yarn workspace 内のソースコードなどをコンテナー内にコピー
COPY . .
# 依存ライブラリをインストール
RUN yarn install --pure-lockfile --non-interactive
# prisma のスキーマを生成
RUN yarn generate-prisma
# ソースコードをビルド
RUN yarn build-for-line-bot-backend

# -----------------------------
FROM node:20.18.1-bullseye-slim

# timezone setting
RUN ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime

# AWS Lambda Adapter のインストール
COPY --from=public.ecr.aws/awsguru/aws-lambda-adapter:0.8.4 /lambda-adapter /opt/extensions/lambda-adapter
ENV PORT 3000
ENV READINESS_CHECK_PATH /health-check
# Non-HTTP Event Triggers
# @see https://github.com/awslabs/aws-lambda-web-adapter?tab=readme-ov-file#non-http-event-triggers
# ENV AWS_LWA_PASS_THROUGH_PATH /events

WORKDIR /app

# 依存ライブラリをコピー
COPY --from=builder /build/node_modules node_modules
# apps/line-bot-backend のビルド結果をコンテナー内にコピー
COPY --from=builder /build/apps/line-bot-backend/dist dist
# apps/line-bot-backend の package.json をコンテナー内にコピー
COPY --from=builder /build/apps/line-bot-backend/package.json .
# apps/line-bot-backend の .env.docker をコンテナー内にコピー
COPY --from=builder /build/.env.line-bot-backend ./.env
# yarn workspace 内の共通ライブラリ群（commons database）のビルド結果をコンテナー内にコピー
COPY --from=builder /build/packages/commons node_modules/@tech-post-cast/commons
COPY --from=builder /build/packages/database node_modules/@tech-post-cast/database

EXPOSE 4000 
CMD [ "yarn", "start:prod" ]
