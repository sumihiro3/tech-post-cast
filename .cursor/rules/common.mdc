---
description: Tech Post Cast モノレポ共通実装ルール
globs: "**/*"
alwaysApply: true
---

# Tech Post Cast モノレポ共通実装ルール

**適用対象**: **/*

このプロジェクトはモノレポ構造を採用しており、複数のアプリケーションとパッケージが含まれています。各アプリケーション・パッケージごとに特定のルールが存在する場合は、それらを優先してください。

> **重要**: この文書は基本的なルールの概要です。詳細な実装ガイドラインについては `/docs/coding-rules/` ディレクトリ内の各ドキュメントを参照してください。

## 全般的なコーディング規約

- コードの可読性を最優先し、適切なコメントを追加してください。
- 変数名や関数名は意図が明確に伝わるように命名してください。
- 各ファイルは単一の責任を持つようにしてください。
- 可能な限り副作用を避け、純粋な関数を使用してください。
- エラーハンドリングは適切に行い、エラーメッセージは具体的に記述してください。
- マジックナンバーや文字列リテラルを避け、定数として定義してください。
- 循環的依存関係を避けてください。
- 各アプリケーション種別ごとのコーディングガイドラインは `/docs/coding-rules/` ディレクトリを参照してください。

## ディレクトリ構造

```
tech-post-cast/
├── apps/                # アプリケーション
│   ├── api-backend/     # バックエンドAPI (NestJS)
│   ├── backend/         # 番組生成用バックエンドAPI (NestJS)
│   ├── lp-frontend/     # ランディングページフロントエンド (Nuxt3)
│   ├── liff-frontend/   # LIFFフロントエンド
│   ├── line-bot/        # LINEボット
│   └── infra/           # インフラストラクチャコード (AWS CDK)
├── packages/            # 共有パッケージ
│   ├── database/        # データベース関連コード・スキーマ
│   ├── commons/         # 共通ユーティリティと機能
│   ├── eslint-config/   # ESLint設定
│   ├── tsconfig/        # TypeScript設定
│   └── ui-components/   # 共有UIコンポーネント
└── docs/                # プロジェクトドキュメント
    └── coding-rules/    # 詳細なコーディングルール
```

## Git管理

- コミットメッセージは具体的に記述し、関連するチケット番号を含めてください。
- ブランチ名は `feature/XXX`、`fix/XXX`、`refactor/XXX` などの命名規則にしたがってください。
- 機能開発はfeatureブランチで行い、完成したらPull Requestを作成してください。
- コードレビュープロセスを経てからマージしてください。

## テスト

- 新しい機能を追加する場合は、対応するテストも追加してください。
- テストカバレッジを維持するように努めてください。
- テストは自動化され、CI/CDパイプラインに組み込まれています。
- 詳細なテスト戦略については `/docs/coding-rules/common.md#統一テスト戦略` を参照してください。

## パッケージ管理

- 依存関係の管理にはYarnを使用しています。
- ルートの package.json にはモノレポ全体の依存関係を記述し、各アプリケーションの package.json にはそのアプリケーション固有の依存関係を記述してください。
- バージョン競合を避けるため、共通ライブラリはルートの package.json で管理してください。

## ドキュメント

- コードの変更を行う場合は、必要に応じてドキュメントも更新してください。
- APIエンドポイントを追加・変更する場合は、OpenAPI仕様を更新してください。
- 新しい機能や重要な変更については、docs/ ディレクトリにドキュメントを追加してください。

## 環境設定

- 環境変数は `.env` ファイルで管理し、機密情報は含めないでください。
- 開発環境と本番環境の違いは環境変数で制御してください。
- CI/CD設定は `.github/workflows/` ディレクトリにあります。

## 共有パッケージの利用

- 共有パッケージ（commons, database等）の詳細な利用ガイドラインは `/docs/coding-rules/common.md#共有コードとパッケージの使用ガイドライン` を参照してください。
